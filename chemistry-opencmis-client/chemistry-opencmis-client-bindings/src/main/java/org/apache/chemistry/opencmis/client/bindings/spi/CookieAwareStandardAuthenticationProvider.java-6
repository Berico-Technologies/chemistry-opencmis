/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.chemistry.opencmis.client.bindings.spi;

import java.net.CookieManager;
import java.net.CookiePolicy;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.chemistry.opencmis.commons.exceptions.CmisConnectionException;

/**
 * Standard authentication provider class with cookie support.
 * 
 * (This class uses Java 6 classes and therefore is not part of OpenCMIS
 * releases.)
 */
public class CookieAwareStandardAuthenticationProvider extends StandardAuthenticationProvider {

    private static final long serialVersionUID = 1L;

    private final CookieManager cookies = new CookieManager(null, CookiePolicy.ACCEPT_ALL);

    @Override
    public Map<String, List<String>> getHTTPHeaders(String url) {
        Map<String, List<String>> headers = super.getHTTPHeaders(url);
        if (headers == null) {
            headers = new HashMap<String, List<String>>();
        }

        try {
            headers.putAll(cookies.get(new URI(url), headers));
        } catch (Exception e) {
            throw new CmisConnectionException("Cannot get cookies: " + e.getMessage(), e);
        }

        return headers;
    }

    @Override
    public void putResponseHeaders(String url, Map<String, List<String>> headers) {
        try {
            cookies.put(new URI(url), headers);
        } catch (Exception e) {
            throw new CmisConnectionException("Cannot set cookies: " + e.getMessage(), e);
        }
    }
}
